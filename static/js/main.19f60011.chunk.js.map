{"version":3,"sources":["panels/FormsPanels/SearchPanel.js","panels/MapPanels/PanelsLeafletMap.js","panels/MapPanels/MapsEmpty.js","panels/FormsPanels/MocksSettingsPanel.js","api/client.js","panels/FormsPanels/MocksSettingsPanelEmpty.js","panels/MocksSettings.js","panels/MenuItems.js","panels/MapPanels/Markers.js","panels/FormsPanels/PopupViewMapData.js","panels/MapPanels/PopupSettings.js","panels/MainMap.js","App.js","index.js"],"names":["SearchPanel","rows","onSelect","useState","search","setSearch","thematics","setThematics","useEffect","search_l","toLowerCase","filter","name","indexOf","get_thematics","SelectCell","id","separator","mode","value","onChange","e","target","className","length","map","thematic","onClick","bind","url","process","Zoom","maps","zoomIn","src","alt","Zoom2","zoomOut","ZoomPanel","MyLocation","handler","CustomZoomPanel","useMap","CustomLocationBtn","useMapEvents","locationfound","flyTo","latlng","getZoom","animate","locate","Map","height","children","MapContainer","zoomControl","style","center","zoom","scrollWheelZoom","TileLayer","boxZoom","attribution","AlertDeletePopout","onConfirm","onClose","actions","title","autoclose","action","actionsLayout","header","text","FormItemMinMax","min","max","top","bottom","defaultValue","getRef","ref","NameInput","setName","isUpdated","paddingLeft","event","placeholder","MocksSettingsPanel","onSave","onDelete","data","buttonLoadingState","globalSetModalView","undefined","textError","setError","ref_dats","components","viewData","setViewData","identifier","setIdentifier","SettingsForms","type","ans","field","push","React","createRef","generateAndRefDefaultData","default_","default_data_generate","createDataDefault","GenerateDataRefForms","i","key","onRemove","modalDelete","open","close","ViewForms","size","disabled","uuid","values","validate_on_params","params","error","new_value","parseInt","isNaN","parseFloat","toString","current","error1","error2","ValidateDataRefForms","trim","ValidateIdentifierOnCreate","stretched","fixed","left","PathSubUrl","axios","create","headers","withCredentials","hook_append_first_state_data","a","Object","entries","AsyncLocalStorage","setItem","JSON","stringify","MocksGetIds","console","info","getItem","parse","MocksGetInfo","ids","arr","item","log","MocksGet","data_ids","removeItem","indexOfDataIds","slice","GetDataGeoCode","lat","lng","LastTelemetriesSensorItemByMock","mock_data","getRandomArbitrary","Math","random","light","ceil","Tamb_degC","latitude","longitude","LastTelemetriesSensors","mocks","auto","level","MocksSettingsPanelEmpty","icon","href","MocksSettings","defaultViewDetailModalInfo","view","payloadMocksSettings","setPayloadMocksSettings","dataSearch","setDataSearch","viewDetailModalInfo","setViewDetailModalInfo","viewDetailModal","find","newViewDetailModalInfo","client","Array","isArray","load","searchData","after","fieldIndexDeleted","findIndex","splice","then","isCreatedNew","fieldIndexUpdated","unshift","LinkTo","document","querySelector","click","MainMenuIcon","collapsed","LeftMenuItem","localStorage","loadCollapsed","setCollapsed","saveAndSetCollapsed","saveCollapsed","width","iconShape","display","iconDefault","L","Icon","iconUrl","iconRetinaUrl","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","Point","AutoLight","checked","setChecked","defaultChecked","LevelLightControl","setValue","step","v","TemperatureBlock","temperature","toFixed","ResourceAny","ResourceLed","ResourceController","MetaInfoBlock","addressName","setAddressName","window","FunctionCustomLoadAddress","LoadAddress","overflowY","HeaderBlock","SettingsBlock","autoLight","PopupViewMapData","PropTypes","shape","number","isRequired","instanceOf","string","bool","onChangeCommand","popUpLoad","setPopUpLoad","setAutoLight","autoLightDisabled","setAutoLightDisabled","setLightUpdatable","setLight","onChangeAutoLight","state","lampEnabled","setLampEnabled","onChangeHeaderSwitch","GroupViewData","positionMarker","PopupSettings","dataShape","Popup","position","MarkersList","coords","Marker","eventHandlers","MainMap","telemetry","setTelemetry","mapsCoordsData","setMapsCoordsData","popupSettingsView","setPopupSettingsView","setInterval","row","influx","ICCID","fieldIndexTelemetry","telemetry_data","command","level_light","App","setPopout","modalView","setModalView","fetchData","Wrapper","component","activePanel","basename","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.19f60011.chunk.js","sourcesContent":["import {Cell, Footer, Group, Search} from \"@vkontakte/vkui\";\nimport PropTypes from 'prop-types';\nimport React, {useEffect, useState} from \"react\";\n\nconst SearchPanel = ({rows, onSelect}) => {\n    const [search, setSearch] = useState('');\n    const [thematics, setThematics] = useState(rows);\n\n    useEffect(() => {\n        const get_thematics = (search) => {\n            const search_l = search.toLowerCase();\n            return rows.filter(({name}) => name.toLowerCase().indexOf(search_l) > -1);\n        }\n        setThematics(get_thematics(search));\n    }, [rows, search]);\n\n    const SearchThematics = (event) => {\n        setSearch(event.target.value);\n    }\n    const SelectCell = (id) => {\n        typeof onSelect === 'function' ? onSelect(id) : null;\n    }\n    return (\n        <Group separator='hide' mode='plain'>\n            <Search value={search} onChange={(e) => SearchThematics(e)}/>\n            <div className='scrolling-cell'>\n                {thematics.length > 0 && thematics.map(thematic => <Cell\n                    key={thematic.id} onClick={SelectCell.bind(this, thematic.id)}>{thematic.name}</Cell>)}\n                {thematics.length === 0 && <Footer>Ничего не найдено</Footer>}\n            </div>\n        </Group>\n    )\n}\nSearchPanel.propTypes = {\n    rows: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n    })).isRequired,\n    onSelect: PropTypes.func\n};\nexport default SearchPanel;\n","import React from 'react';\nimport './PanelsLeafletMap.css';\nconst url = process.env.PUBLIC_URL + '/map-leaflet/';\nconst Zoom = ({maps}) => {\n    return(\n        <div onClick={() => {\n            maps.zoomIn();\n        }} className=\"zoom-top-bar-up zoom-top-bar-btn\">\n            <img src={url + \"plus.svg\"} alt=\"PlusZoom\"/>\n        </div>\n    )\n}\nconst Zoom2 = ({maps}) => {\n    return(\n        <div onClick={() => {\n            maps.zoomOut();\n        }} className=\"zoom-top-bar-down zoom-top-bar-btn\">\n            <img src={url + \"minus.svg\"} alt=\"MinusZoom\"/>\n        </div>\n    )\n}\n\nexport const ZoomPanel = ({maps}) => {\n    return (\n        <div className=\"zoom-top-bar\">\n            <Zoom maps={maps}/>\n            <Zoom2 maps={maps}/>\n        </div>\n    );\n}\nexport const MyLocation = ({handler}) => {\n    return (\n        <div onClick={handler} className=\"to-image-btn btn-my-location\">\n            <img src={url + \"find.svg\"} alt=\"MyLocation\"/>\n        </div>\n    )\n}\nexport default ZoomPanel;","import React, {useEffect, useState} from \"react\";\nimport {MapContainer, TileLayer, Marker, Popup, ZoomControl, useMap, useMapEvents, locationfound} from 'react-leaflet'\nimport {ZoomPanel, MyLocation} from \"./PanelsLeafletMap\";\nimport PropTypes from \"prop-types\";\n\nconst CustomZoomPanel = () => {\n    const map = useMap();\n    return (\n        <ZoomPanel maps={map}/>\n    )\n}\n\nconst CustomLocationBtn = () => {\n    const map = useMapEvents({\n        locationfound(e) {\n            map.flyTo(e.latlng, map.getZoom(), {\n                animate: false,\n            })\n        },\n    });\n    const handler = () => {\n        map.locate();\n    }\n    return <MyLocation handler={handler}/>;\n}\n\nexport const Map = ({className, height, children}) => {\n    return (\n        <MapContainer zoomControl={false} style={{height}} className={\"CustomMaps \" + className} center={[37.3257279,-122.0372682]} zoom={13} scrollWheelZoom={false}>\n            <CustomZoomPanel/>\n            <CustomLocationBtn />\n            <TileLayer\n                boxZoom={true}\n                attribution=''\n                //url=\"https://core-renderer-tiles.maps.yandex.net/tiles?l=map&v=21.06.04-0-b210520094930&x={x}&y={y}&z={z}&scale=1&lang=ru_RU\"\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            {children}\n        </MapContainer>\n    );\n};\n\nMap.propTypes = {\n    className: PropTypes.string,\n    height: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.element\n    ])\n}","import {\n    Alert,\n    Button,\n    FormItem,\n    FormLayout,\n    FormLayoutGroup,\n    FormStatus,\n    Group,\n    Input,\n    PanelHeader,\n    PanelHeaderBack,\n    PanelHeaderButton,\n    Spinner\n} from \"@vkontakte/vkui\";\nimport { Icon28DeleteOutline } from '@vkontakte/icons';\nimport PropTypes from \"prop-types\";\nimport React, {useEffect, useState} from \"react\";\nimport {Map} from \"../MapPanels/MapsEmpty\";\n\nconst AlertDeletePopout = ({onConfirm, onClose}) => {\n    return (\n        <Alert\n            actions={[{\n                title: 'Отмена',\n                autoclose: true,\n                mode: 'cancel'\n            }, {\n                title: 'Удалить',\n                autoclose: true,\n                mode: 'destructive',\n                action: onConfirm\n            }]}\n            actionsLayout=\"horizontal\"\n            onClose={onClose}\n            header=\"Удаление данных\"\n            text=\"Вы уверены, что хотите удалить эти данные?\"\n        />\n    );\n}\n\nconst FormItemMinMax = ({name, min, max}) => {\n    return (\n        <FormLayoutGroup mode=\"horizontal\">\n            <FormItem top={name} bottom=\"Min\">\n                <Input defaultValue={min.value} getRef={min.ref}/>\n            </FormItem>\n            <FormItem top=\"...\" bottom=\"Max\">\n                <Input defaultValue={max.value} getRef={max.ref}/>\n            </FormItem>\n        </FormLayoutGroup>\n    )\n}\n\nconst NameInput = ({name, setName, isUpdated}) => {\n    if (isUpdated){\n        return name;\n    }\n    const loadData = (event) => {\n        setName(event.target.value)\n    }\n    return (\n        <div style={{paddingLeft: \"16px\"}}>\n            <Input onChange={loadData.bind(this)} placeholder={name}/>\n        </div>\n    )\n}\n\nconst MocksSettingsPanel = ({id, name, onSave, onDelete, data, buttonLoadingState, globalSetModalView}) => {\n    const isUpdated = (id !== null) && (id !== undefined);\n    const [textError, setError] = useState(false);\n    const [viewData, setViewData] = useState({ref_dats: null, components: null});\n    const [identifier, setIdentifier] = useState(id);\n\n    // function logic clear/validate\n    const SettingsForms = [\n        [\"light\", \"Уровень освещения\", {type: \"int\"}],\n        [\"Tamb_degC\", \"Tamb_degC\", {type: \"int\"}],\n        [\"latitude\", \"latitude\", {type: \"float\"}],\n        [\"longitude\", \"longitude\", {type: \"float\"}]\n    ];\n\n    const GenerateDataRefForms = (data) => {\n        const createDataDefault = (data) => {\n            if ((data === null) || (data === undefined)){\n                const default_ = {min: \"\", max: \"\"};\n                let default_data_generate = {};\n                for (const field of SettingsForms) {\n                    default_data_generate[field[0]] = default_;\n                }\n                return default_data_generate;\n            }\n            return data;\n        }\n        const generateAndRefDefaultData = (data) => {\n            let ans = [];\n            for (const field of SettingsForms) {\n                ans.push({\n                    name: field[1],\n                    min: {\n                        ref: React.createRef(),\n                        value: data[field[0]].min\n                    },\n                    max:{\n                        ref: React.createRef(),\n                        value: data[field[0]].max\n                    },\n                });\n            }\n            return ans;\n        }\n        return generateAndRefDefaultData(createDataDefault(data));\n    }\n\n    const ValidateDataRefForms = (ref_dats) => {\n        const validate_on_params = (params, value) => {\n            let error = false;\n            let new_value = undefined;\n            if (params.type === \"int\"){\n                new_value = parseInt(value);\n                error = isNaN(new_value) ? \"должно быть целым числом\": error;\n            }\n            if (params.type === \"float\"){\n                new_value = parseFloat(value);\n                error = isNaN(new_value) ? \"должно быть числом\": error;\n            }\n            if (error){\n                return [undefined, error];\n            }\n            if ((params.min !== undefined) && (new_value < params.min)){\n                return [undefined, \"должно быть не меньше \" + params.min.toString()];\n            }\n            if ((params.max !== undefined) && (new_value > params.max)){\n                return [undefined, \"должно быть не больше \" + params.max.toString()];\n            }\n            return [new_value, false];\n        }\n        let ans = {};\n        for (let i = 0; i < ref_dats.length; i++){\n            const field = SettingsForms[i];\n            let [min, error1] = validate_on_params(field[2], ref_dats[i].min.ref.current.value);\n            if (error1 !== false){\n                setError(`Параметр '`+field[1]+`' `+error1);\n                return null;\n            }\n            let [max, error2] = validate_on_params(field[2], ref_dats[i].max.ref.current.value);\n            if (error2 !== false){\n                setError(`Параметр '`+field[1]+`' `+error2);\n                return null;\n            }\n            ans[field[0]] = {min, max};\n        }\n        setError(false);\n        return ans;\n    }\n\n    const ValidateIdentifierOnCreate = (uuid) => {\n        if (!((typeof uuid === 'string') && (uuid.toString().trim().length > 0))){\n            setError(\"Идетификатор устройства должен быть заполнен\");\n            return null;\n        }\n        setError(false);\n        return uuid.toString().trim();\n    }\n\n    // SetUp\n    useEffect(() => {\n        if (data === null){\n            return true;\n        }\n        const ref_dats = GenerateDataRefForms(data);\n\n        const components = ref_dats.map((i, key) => {\n            return (<FormItemMinMax key={key} name={i.name} min={i.min} max={i.max}/>);\n        });\n        setViewData({\n            ref_dats,\n            components\n        });\n    }, [data, buttonLoadingState]);\n\n    // Btn handlers\n    const onSubmit = () => {\n        let uuid = id;\n        const values = ValidateDataRefForms(viewData.ref_dats);\n        if (!isUpdated){\n            uuid = ValidateIdentifierOnCreate(identifier);\n        }\n        if ((values !== undefined) && (values !== null) && (uuid !== null) && (uuid !== undefined)){\n            typeof onSave === 'function' ? onSave(values, uuid) : null;\n        }\n\n    }\n    const onRemove = () => {\n        typeof onDelete === 'function' ? onDelete(id) : null;\n    }\n    const modalDelete = {\n        open: () => {\n            globalSetModalView(<AlertDeletePopout onClose={modalDelete.close.bind(this)} onConfirm={onRemove.bind(this)}/>);\n        },\n        close: () => {globalSetModalView(null);}\n    }\n\n    const ViewForms = viewData.components === null ? <Spinner size=\"large\"/> : (\n        <FormLayout>\n            {textError ? (\n                <FormStatus header=\"Некорректное заполнение формы\" mode=\"error\">\n                    {textError}\n                </FormStatus>\n            ):null}\n            {viewData.components}\n            <FormItem>\n                <Map height={\"400px\"}/>\n            </FormItem>\n            <FormItem>\n                <Button disabled={buttonLoadingState} onClick={onSubmit} size=\"l\" stretched>\n                    {buttonLoadingState ? <Spinner size=\"small\"/> : (data === undefined ? \"Сохранить\" : \"Обновить\")}\n                </Button>\n            </FormItem>\n        </FormLayout>\n    )\n\n    return (\n        <Group separator='hide' mode='plain'>\n            <PanelHeader\n                fixed={false} separator={false}\n                left={isUpdated ?(\n                    <PanelHeaderButton onClick={modalDelete.open.bind(this)}>\n                        <Icon28DeleteOutline/>\n                    </PanelHeaderButton>\n                ) : null}\n            ><NameInput name={name} isUpdated={isUpdated} setName={(uuid) => {setIdentifier(uuid)}}/></PanelHeader>\n            <div className=\"scrolling-form\">\n                {ViewForms}\n            </div>\n        </Group>\n    );\n}\n\nconst TMinMax = PropTypes.shape({\n    min: PropTypes.number,\n    max: PropTypes.number,\n});\n\nconst TRefProp = PropTypes.oneOfType([\n    // Either a function\n    PropTypes.func,\n    // Or the instance of a DOM native element (see the note about SSR)\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) })\n]);\n\nconst TRefAndValueInput = PropTypes.shape({\n    ref: TRefProp.isRequired,\n    value: PropTypes.string.isRequired,\n})\n\nFormItemMinMax.propTypes = {\n    name: PropTypes.string.isRequired,\n    data: PropTypes.shape({\n        min: TRefAndValueInput.isRequired,\n        max: TRefAndValueInput.isRequired,\n    })\n}\n\nAlertDeletePopout.propTypes = {\n    onConfirm: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n}\n\nMocksSettingsPanel.propTypes = {\n    id: PropTypes.string, // ID - Обратный реф. Если null или undefined, будет создаваться новый элемент\n    name: PropTypes.string.isRequired, // Название панели\n    onDelete: PropTypes.func, // Функция при удалении датчика\n    globalSetModalView: PropTypes.func, // Функция глобальной установки модального окна\n    data: PropTypes.shape({\n        light: TMinMax,\n        Tamb_degC: TMinMax,\n        latitude: TMinMax,\n        longitude: TMinMax,\n    }), // Если null, тогда будет прелоудер, Если undefined, тогда значения по умолчнаию вставятся в форму\n    onSave: PropTypes.func, // Событие при сохранении (передаётся объект с данными как в data)\n    buttonLoadingState: PropTypes.bool.isRequired, // true - кнопка будет в состоянии загрузки, false - в обычном состоянии\n\n};\n\nexport default MocksSettingsPanel;","import axios from 'axios';\nimport AsyncLocalStorage from '@createnextapp/async-local-storage'\n\nconst headers = {\n    'Content-type': 'application/json',\n};\n\nconst instance = axios.create({\n    headers,\n    withCredentials: true,\n});\n\nconst BaseUrl = \"https://multi-univ.russu.xyz\";\nexport const PathSubUrl = \"/platform-art-of-light\";\nconst Url = (path) => {\n    const path_base = path.startsWith(\"/\") ? path : \"/\" + path;\n    return BaseUrl + path_base;\n}\n\nasync function hook_append_first_state_data(){\n    const data = {\n        \"grothendieck\": {\n            \"light\": {\n                \"min\": 0,\n                \"max\": 1\n            },\n            \"Tamb_degC\": {\n                \"min\": -10,\n                \"max\": 10\n            },\n            \"latitude\": {\n                \"min\": 56.842120,\n                \"max\": 56.842133\n            },\n            \"longitude\": {\n                \"min\": 60.6520650,\n                \"max\": 60.6520653\n            }\n        },\n        \"haibt\": {\n            \"light\": {\n                \"min\": 15,\n                \"max\": 20\n            },\n            \"Tamb_degC\": {\n                \"min\": -10,\n                \"max\": 10\n            },\n            \"latitude\": {\n                \"min\": 57.9746590,\n                \"max\": 57.9746598\n            },\n            \"longitude\": {\n                \"min\": 59.9557070,\n                \"max\": 59.9557073\n            }\n        },\n        \"hellman\": {\n            \"light\": {\n                \"min\": 0,\n                \"max\": 100\n            },\n            \"Tamb_degC\": {\n                \"min\": -30,\n                \"max\": 30\n            },\n            \"latitude\": {\n                \"min\": 56.8442040,\n                \"max\": 56.8442044\n            },\n            \"longitude\": {\n                \"min\": 60.6537150,\n                \"max\": 60.6537157\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(data)) {\n        await AsyncLocalStorage.setItem(\"mocks_get_\"+key, JSON.stringify(value));\n    }\n}\n\nasync function MocksGetIds(){\n    console.info(\"MocksGetIds get\");\n    const data = await AsyncLocalStorage.getItem(\"mocks_get\");\n    if (data !== null && data !== undefined){\n        return JSON.parse(data);\n    }\n    await hook_append_first_state_data();\n    return ['grothendieck', 'haibt', 'hellman'];\n}\n\nasync function MocksGetInfo(ids){\n    console.info(\"MocksGetInfo get by ids=\"+ids);\n    let arr = [];\n    for (let i = 0; i < ids.length; i++) {\n        try {\n            const item = await AsyncLocalStorage.getItem(\"mocks_get_\"+ids[i]);\n            arr.push({\n                id: ids[i],\n                ...JSON.parse(item)\n            });\n        } catch (e){\n            console.error(e);\n        }\n    }\n    console.log(\"MocksGetInfo get\", arr);\n    return arr;\n}\n\nexport async function MocksGet() {\n    console.info(\"Mocks get\");\n    const data_ids = await MocksGetIds();\n    return await MocksGetInfo(data_ids);\n}\n\nexport async function MocksSet(id, data){\n    console.info(\"Mocks set by id=\" + id);\n    let data_ids = await MocksGetIds();\n    if (data_ids.indexOf(id) === -1){\n        data_ids.push(id);\n        await AsyncLocalStorage.setItem(\"mocks_get\", JSON.stringify(data_ids));\n    }\n    await AsyncLocalStorage.setItem(\"mocks_get_\"+id, JSON.stringify(data));\n    return true;\n}\n\nexport async function MocksDelete(id){\n    await AsyncLocalStorage.removeItem(\"mocks_get_\"+id);\n    let data_ids = await MocksGetIds();\n    const indexOfDataIds = data_ids.indexOf(id);\n    if (indexOfDataIds !== -1){\n        data_ids.slice(indexOfDataIds, 0);\n        await AsyncLocalStorage.setItem(\"mocks_get\", JSON.stringify(data_ids));\n    }\n    return true;\n}\n\nexport async function GetDataGeoCode(lat, lng){\n    return \"Адрес не определён\";\n}\n\nfunction LastTelemetriesSensorItemByMock(mock_data){\n    function getRandomArbitrary(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n    return {\n        \"data\": {\n            \"name\": mock_data.id.toString(),\n            \"id\": mock_data.id.toString(),\n        },\n        \"command\": {\n            \"level_light\": getRandomArbitrary(mock_data.light.min, mock_data.light.max),\n        },\n        \"status\": {},\n        \"influx\": {\n            \"ICCID\": mock_data.id.toString(),\n            \"Tamb_degC\": Math.ceil(getRandomArbitrary(mock_data.Tamb_degC.min, mock_data.Tamb_degC.max)),\n            \"latitude\": getRandomArbitrary(mock_data.latitude.min, mock_data.latitude.max),\n            \"level_light\": 100,\n            \"light\": getRandomArbitrary(mock_data.light.min, mock_data.light.max),\n            \"longitude\": getRandomArbitrary(mock_data.longitude.min, mock_data.longitude.max)\n        }\n    }\n}\n\nexport async function LastTelemetriesSensors(){\n    const mocks = await MocksGet();\n    const data = mocks.map((item) => {\n        return LastTelemetriesSensorItemByMock(item);\n    });\n    console.log(\"LastTelemetriesSensors\", data);\n    return data;\n}\n\nexport async function PushCommandTelemetriesSensor(uuid, auto, level){\n    return 200;\n}","import {FormLayout, Group, Link, Placeholder} from \"@vkontakte/vkui\";\nimport {Icon56CheckCircleDeviceOutline} from \"@vkontakte/icons\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MocksSettingsPanelEmpty = ({onClick}) => {\n    return (\n        <FormLayout>\n            <Group separator='hide' mode='plain'>\n                <div className=\"scrolling-form-no-header\">\n                    <Placeholder\n                        icon={<Icon56CheckCircleDeviceOutline />}\n                        stretched={true}\n                    >\n                        Выберите устройство или <Link onClick={onClick} href=\"#\">создайте новые данные</Link>\n                    </Placeholder>\n                </div>\n            </Group>\n        </FormLayout>\n    );\n}\nMocksSettingsPanelEmpty.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\nexport default MocksSettingsPanelEmpty;","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n\tPanel,\n\tPanelHeader,\n} from '@vkontakte/vkui';\nimport {Icon28AddOutline} from \"@vkontakte/icons\";\nimport SearchPanel from \"./FormsPanels/SearchPanel\";\nimport MocksSettingsPanel from \"./FormsPanels/MocksSettingsPanel\";\nimport * as client from \"../api/client\";\nimport MocksSettingsPanelEmpty from \"./FormsPanels/MocksSettingsPanelEmpty\";\n\nconst MocksSettings = ({id, globalSetModalView}) => {\n\tconst defaultViewDetailModalInfo = {view: false, data: null, id: null, buttonLoadingState: false, name: null};\n\tconst [payloadMocksSettings, setPayloadMocksSettings] = useState([]);\n\tconst [dataSearch, setDataSearch] = useState([]);\n\tconst [viewDetailModalInfo, setViewDetailModalInfo] = useState(defaultViewDetailModalInfo);\n\tconst viewDetailModal = (id) => {\n\t\tif (id === null){\n\t\t\t// Create New\n\t\t\tsetViewDetailModalInfo({...defaultViewDetailModalInfo, name: \"Идентификатор устройства\", data: undefined, view: true});\n\t\t\treturn;\n\t\t}\n\t\tconst field = payloadMocksSettings.find(e => e[\"id\"] === id.toString());\n\t\t// Set active\n\t\tconst newViewDetailModalInfo = JSON.parse(JSON.stringify(viewDetailModalInfo));\n\t\tnewViewDetailModalInfo.data = field;\n\t\tnewViewDetailModalInfo.name = field.id;\n\t\tnewViewDetailModalInfo.id = field.id;\n\t\tnewViewDetailModalInfo.view = true;\n\t\tsetViewDetailModalInfo(newViewDetailModalInfo);\n\t}\n\tconst DeleteDetailModalData = (uuid) => {\n\t\tsetViewDetailModalInfo(defaultViewDetailModalInfo); // Очищаем активное окно\n\t\tconst fieldIndexDeleted= payloadMocksSettings.findIndex(e => e[\"id\"] === uuid.toString());\n\t\tif (fieldIndexDeleted !== -1){\n\t\t\tpayloadMocksSettings.splice(fieldIndexDeleted, 1);\n\t\t\tsetPayloadMocksSettings(JSON.parse(JSON.stringify(payloadMocksSettings)));\n\t\t}\n\t\tclient.MocksDelete(uuid).then();\n\t}\n\tconst SaveDetailModalData = (data, uuid) => {\n\t\t// Prepare and send server\n\t\tconst isCreatedNew = viewDetailModalInfo.id !== uuid\n\t\tif (isCreatedNew){\n\t\t\t// Created\n\t\t\tsetViewDetailModalInfo({view: true, id: uuid, name: uuid, data: data, buttonLoadingState: true});\n\t\t} else {\n\t\t\t// Updated\n\t\t\tsetViewDetailModalInfo({...viewDetailModalInfo, buttonLoadingState: true});\n\t\t}\n\t\tclient.MocksSet(\n\t\t\tuuid,\n\t\t\tdata\n\t\t).then((ans) => {\n\t\t\t// Get answer server\n\t\t\tif (ans === true){\n\t\t\t\tlet name = isCreatedNew ? uuid: viewDetailModalInfo.name;\n\t\t\t\tsetViewDetailModalInfo({view: true, id: uuid, name, data, buttonLoadingState: false});\n\t\t\t\tconst fieldIndexUpdated = payloadMocksSettings.findIndex(e => e[\"id\"] === uuid.toString());\n\t\t\t\tif (fieldIndexUpdated !== -1){\n\t\t\t\t\tpayloadMocksSettings[fieldIndexUpdated] = {\n\t\t\t\t\t\tid: uuid,\n\t\t\t\t\t\t...data,\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpayloadMocksSettings.unshift({\n\t\t\t\t\t\tid: uuid,\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\tname: uuid,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsetPayloadMocksSettings([]);\n\t\t\t\tsetPayloadMocksSettings(payloadMocksSettings);\n\t\t\t}\n\t\t});\n\t}\n\tuseEffect(() => {\n\t\tasync function load(){\n\t\t\tconst data = await client.MocksGet();\n\t\t\tif ((data !== null) && (data !== undefined) && (Array.isArray(data))){\n\t\t\t\tsetPayloadMocksSettings(data);\n\t\t\t}\n\t\t}\n\t\tload();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst searchData = payloadMocksSettings.map((item) => {\n\t\t\treturn {id: item.id.toString(), name: item.id.toString()}\n\t\t});\n\t\tsetDataSearch(searchData);\n\t}, [payloadMocksSettings]);\n\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t<PanelHeader>Вариационные данные</PanelHeader>\n\t\t\t<div className='mocks_wrapper'>\n\t\t\t\t<div className='left'>\n\t\t\t\t\t<SearchPanel after={\n\t\t\t\t\t\t<div className={\"ddd\"}>\n\t\t\t\t\t\t\t<Icon28AddOutline />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t} onSelect={viewDetailModal} rows={dataSearch}/>\n\t\t\t\t</div>\n\t\t\t\t<div className='right'>\n\t\t\t\t\t{viewDetailModalInfo.view ?(\n\t\t\t\t\t\t<MocksSettingsPanel\n\t\t\t\t\t\t\tid={viewDetailModalInfo.id}\n\t\t\t\t\t\t\tname={viewDetailModalInfo.name}\n\t\t\t\t\t\t\tdata={viewDetailModalInfo.data}\n\t\t\t\t\t\t\tonDelete={DeleteDetailModalData}\n\t\t\t\t\t\t\tonSave={SaveDetailModalData}\n\t\t\t\t\t\t\tglobalSetModalView={globalSetModalView}\n\t\t\t\t\t\t\tbuttonLoadingState={viewDetailModalInfo.buttonLoadingState}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<MocksSettingsPanelEmpty onClick={viewDetailModal.bind(this, null)}/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Panel>\n\t);\n}\n\nMocksSettings.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tglobalSetModalView: PropTypes.func,\n};\n\nexport default MocksSettings;\n","import { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport './MenuItems.css'\nimport {Div, Footer} from \"@vkontakte/vkui\";\nimport { Icon28LocationMapOutline } from '@vkontakte/icons';\nimport { Icon28ListOutline } from '@vkontakte/icons';\nimport { Icon28SettingsOutline } from '@vkontakte/icons';\nimport { Icon28ArrowRightOutline } from '@vkontakte/icons';\n\nimport React, {useState} from \"react\";\nimport {localStorage} from \"@vkontakte/vkjs\";\nimport {PathSubUrl} from \"../api/client\";\n\nfunction LinkTo(href) {\n    const data = document.querySelector(\"#link-to\");\n    data.href = href\n    data.click();\n}\n\nconst MainMenuIcon = ({onClick, collapsed}) => {\n    return (\n        <div onClick={onClick} className={\"CompanyNameSidebarMenu\"}>\n            <Div><h1>{collapsed ? (<Icon28ArrowRightOutline />) : \"Art of Light\"}</h1></Div>\n        </div>\n    );\n}\n\nconst loadCollapsed = () => {\n    let collapsed = localStorage.getItem(\"menuCollapsed\");\n    if (collapsed !== null){\n        collapsed = collapsed.toString();\n    }\n    if (collapsed !== \"true\" && collapsed !== \"false\") {\n        localStorage.setItem(\"menuCollapsed\", \"false\");\n        collapsed = \"false\";\n    }\n    return collapsed === \"true\";\n}\nconst saveCollapsed = (collapsed) => {\n    localStorage.setItem(\"menuCollapsed\", collapsed ? \"true\" : \"false\");\n}\n\nconst LeftMenuItem = () => {\n    const [collapsed, setCollapsed] = useState(loadCollapsed());\n\n    const saveAndSetCollapsed = (value) => {\n        setCollapsed(value);\n        saveCollapsed(value);\n    }\n\n    return (\n        <ProSidebar collapsed={collapsed} width={270} className={\"left-menu-sidebar\"}>\n            <Menu iconShape={null}>\n                <div className={\"container-menu\"}>\n                    <MainMenuIcon collapsed={collapsed} onClick={() => {saveAndSetCollapsed(!collapsed)}}/>\n                    <MenuItem onClick={LinkTo.bind(this, PathSubUrl+\"/#/\")} icon={<Icon28LocationMapOutline/>}>Карта</MenuItem>\n                    <MenuItem icon={<Icon28ListOutline/>}>Список устройств</MenuItem>\n                    <SubMenu title=\"Настройки\" icon={<Icon28SettingsOutline/>}>\n                        <MenuItem onClick={LinkTo.bind(this, PathSubUrl+\"/#/mocks-settings/\")}>Вариационные данные</MenuItem>\n                        <MenuItem>Платформа</MenuItem>\n                    </SubMenu>\n                    <Footer><div>\n                        v 0.1\n                        <a id=\"link-to\" href=\"#\" style={{display: \"none\"}} />\n                    </div></Footer>\n                </div>\n            </Menu>\n        </ProSidebar>\n    );\n}\n\nexport default LeftMenuItem;\n","import L from 'leaflet';\nimport './Markers.css';\nconst url = process.env.PUBLIC_URL + '/map-markers/';\nconst iconDefault = new L.Icon({\n    iconUrl: (url + \"default.svg\"),\n    iconRetinaUrl: (url + \"default.svg\"),\n    iconAnchor: null,\n    popupAnchor: null,\n    shadowUrl: null,\n    shadowSize: null,\n    shadowAnchor: null,\n    iconSize: new L.Point(60, 67),\n    className: 'leaflet-custom-icon'\n});\n\nexport { iconDefault };","import React, {useEffect, useState} from \"react\";\nimport {Group, Cell, Switch, FormItem, FormLayoutGroup, Slider, Spinner} from \"@vkontakte/vkui\";\nimport './PopupViewMapData.css'\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\nimport PropTypes from 'prop-types';\nimport * as client from \"../../api/client\";\nconst url = process.env.PUBLIC_URL + '/map-leaflet/';\n\nconst AutoLight = ({checked, disabled, setChecked}) => {\n    return (\n        <div className=\"auto-light\">\n            <div className=\"auto-light__text\">\n                Автояркость\n            </div>\n            <div className=\"auto-light__switch\">\n                <Switch disabled={disabled} onChange={setChecked.bind(this, !checked)} defaultChecked={checked} value={checked}/>\n            </div>\n        </div>\n    )\n}\n\nconst LevelLightControl = ({disabled, value, setValue}) => {\n    return (\n        <div className=\"level_light_control\">\n            <FormItem top={\n                <div className=\"text\">\n                    Яркость\n                </div>\n            }>\n                <Slider\n                    disabled={disabled}\n                    min={0}\n                    max={100}\n                    step={1}\n                    value={value}\n                    onChange={v => setValue(v)}\n                />\n            </FormItem>\n        </div>\n    )\n}\n\nconst TemperatureBlock = ({temperature}) => {\n    return (\n        <div className=\"auto-light\">\n            <div className=\"text-temp\">\n                Температура на улице\n            </div>\n            <div className=\"temperature\">\n                {temperature.toFixed(0)} °С\n            </div>\n        </div>\n    )\n}\n\nconst ResourceAny = ({name, min, max, value}) => {\n    return (\n        <div className=\"level_light_control indicator\">\n            <FormItem top={\n                <div>\n                    <div className=\"text\">\n                        {name}\n                    </div>\n                    <div className=\"text__bottom\">\n                        {value} / {max}\n                    </div>\n                </div>\n            }>\n                <Slider\n                    disabled={true}\n                    min={min}\n                    max={max}\n                    value={value}\n                />\n            </FormItem>\n        </div>\n    )\n}\n\nconst ResourceLed = ({min, max, value}) => {\n    return (\n        <ResourceAny name=\"Ресурс лампы\" min={min} max={max} value={value}/>\n    )\n}\n\nconst ResourceController = ({min, max, value}) => {\n    return (\n        <ResourceAny name=\"Ресурс контроллера\" min={min} max={max} value={value}/>\n    )\n}\n\n\nconst MetaInfoBlock = ({lat, lng}) => {\n    const [addressName, setAddressName] = useState(null);\n\n    useEffect(() => {\n        async function LoadAddress(){\n            const key = lat + \",\" + lng;\n            if (window.FunctionCustomLoadAddress === undefined){\n                window.FunctionCustomLoadAddress = {};\n            }\n            if (window.FunctionCustomLoadAddress[key] != undefined){\n                setAddressName(window.FunctionCustomLoadAddress[key]);\n            } else {\n                setAddressName(<Spinner size=\"small\"/>)\n                const ans = await client.GetDataGeoCode(lat, lng);\n                window.FunctionCustomLoadAddress[key] = ans;\n                setAddressName(ans);\n            }\n        }\n        LoadAddress();\n    }, []);\n\n    return (\n        <div className={\"meta\"}>\n            <Cell disabled>\n                <div style={{overflowY: 'scroll'}} className=\"info-marker\">{addressName}</div>\n                <div className=\"info-marker\">\n                    {lat.toFixed(4)}, {lng.toFixed(4)}\n                    <CopyToClipboard text={lat + \", \" + lng}>\n                                <span className=\"info-marker-copy\">\n                                    <img src={url + \"copy.svg\"} alt=\"Copy.svg\"/>\n                                </span>\n                    </CopyToClipboard>\n\n                </div>\n            </Cell>\n        </div>\n    )\n}\n\n\nconst HeaderBlock = ({id, value, onChange}) => {\n    return (\n        <div className={\"header\"}>\n            <Cell disabled after={<Switch value={value} defaultChecked={value} onChange={onChange.bind(this, !value)}/>}>\n                <h1>ID {id}</h1>\n            </Cell>\n        </div>\n    )\n}\n\nconst SettingsBlock = ({light, temperature, autoLight}) => {\n    return (\n        <div className=\"settings\">\n            <Cell disabled>\n                <AutoLight disabled={autoLight.disabled} checked={autoLight.checked} setChecked={autoLight.setChecked}/>\n                <LevelLightControl disabled={light.disabled} value={light.value} setValue={light.setValue}/>\n                <TemperatureBlock temperature={temperature.temperature}/>\n                <ResourceLed max={500} value={300} min={0}/>\n                <ResourceController  max={5000} value={300} min={0}/>\n            </Cell>\n        </div>\n    )\n}\nconst PopupViewMapData = ({data, onChangeCommand}) => {\n    const [popUpLoad, setPopUpLoad] = useState(true);\n    const [autoLight, setAutoLight] = useState(true);\n    const [autoLightDisabled, setAutoLightDisabled] = useState(false);\n    const setLightUpdatable = (value) => {\n        setLight(value);\n        onChangeCommand({auto: !value.disabled, level: value.value === undefined ? 0 : value.value});\n    }\n    const onChangeAutoLight = (state) => {\n        setAutoLight(state);\n        setLightUpdatable({\n            value: light.value,\n            disabled: state,\n        });\n    }\n\n    const [lampEnabled, setLampEnabled] = useState(true);\n    const onChangeHeaderSwitch = (state) => {\n        setLampEnabled(state);\n        setAutoLight(state ? autoLight: false);\n        setLightUpdatable({\n            value: state ? light.value : 0,\n            disabled: state ? autoLight : true\n        });\n        setAutoLightDisabled(!state);\n    }\n\n    const [light, setLight] = useState({value: 0, disabled: true});\n\n    useEffect(() => {\n        setAutoLight(data.autoLight);\n        setLampEnabled(data.light !== 0);\n        setLight({\n            value: data.light,\n            disabled: data.light !== 0 ? data.autoLight : false,\n        });\n        setPopUpLoad(false);\n    }, []);\n\n    const GroupViewData = () => {\n        return (\n            <Group>\n                <HeaderBlock id={data.uuid} value={lampEnabled} onChange={onChangeHeaderSwitch}/>\n                <MetaInfoBlock lat={data.positionMarker.latitude} lng={data.positionMarker.longitude}/>\n                <SettingsBlock\n                    light={{\n                        value: light.value,\n                        disabled: light.disabled,\n                        setValue: (v) => {setLightUpdatable({value: v, disabled: light.disabled})},\n                    }}\n                    autoLight={{\n                        checked: autoLight,\n                        disabled: autoLightDisabled,\n                        setChecked: onChangeAutoLight,\n                    }}\n                    temperature={{temperature: data.temperature}}\n                />\n            </Group>\n        )\n    }\n\n    return (\n        <div className={\"PopupViewMapData\"}>\n            {popUpLoad ? (<Spinner size=\"small\"/> ) : <GroupViewData/>}\n        </div>\n    )\n}\n\nMetaInfoBlock.propTypes = {\n    lat: PropTypes.number.isRequired,\n    lng: PropTypes.number.isRequired,\n}\n\nTemperatureBlock.propTypes = {\n    temperature: PropTypes.number.isRequired,\n}\n\nLevelLightControl.propTypes = {\n    value: PropTypes.number.isRequired,\n    setValue: PropTypes.func.isRequired,\n    disabled: PropTypes.bool.isRequired,\n}\n\nAutoLight.propTypes = {\n    checked: PropTypes.bool,\n    setChecked: PropTypes.func,\n    disabled: PropTypes.bool,\n}\n\nconst ResourceAnyComposition = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n}\n\nResourceAny.propTypes = {\n    name: PropTypes.string.isRequired,\n    ...ResourceAnyComposition\n}\nResourceLed.propTypes = ResourceAnyComposition;\nResourceController.propTypes = ResourceAnyComposition\n\nHeaderBlock.propTypes = {\n    id: PropTypes.string.isRequired,\n    value: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n\nSettingsBlock.propTypes = {\n    light: PropTypes.shape(LevelLightControl.propTypes),\n    temperature: PropTypes.shape(TemperatureBlock.propTypes),\n    autoLight: PropTypes.shape(AutoLight.propTypes),\n}\n\nexport const PopupViewMapDataShape = {\n    positionMarker: PropTypes.shape({\n        latitude: PropTypes.number.isRequired,\n        longitude: PropTypes.number.isRequired\n    }).isRequired,\n    temperature: PropTypes.number.isRequired,\n    uuid: PropTypes.instanceOf([PropTypes.number, PropTypes.string]).isRequired,\n    autoLight:  PropTypes.bool.isRequired,\n    light:  PropTypes.number.isRequired,\n}\n\nPopupViewMapData.propTypes = {\n    data: PropTypes.shape(PopupViewMapDataShape).isRequired,\n    onChangeCommand: PropTypes.func.isRequired,\n}\nexport default PopupViewMapData;","import {Popup} from \"react-leaflet\";\nimport './PopupSettings.css'\nimport PopupViewMapData, {PopupViewMapDataShape} from \"../FormsPanels/PopupViewMapData\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst PopupSettings = ({dataShape, onChangeCommand, onClose}) => {\n    return (\n        <div className={\"PopupSettingWrapper\"}>\n            <Popup onClose={onClose} position={[dataShape.positionMarker.latitude, dataShape.positionMarker.longitude]}>\n                <PopupViewMapData data={dataShape} onChangeCommand={onChangeCommand}/>\n            </Popup>\n        </div>\n    )\n}\n\nPopupSettings.propTypes = {\n    dataShape: PropTypes.shape(PopupViewMapDataShape).isRequired,\n    onChangeCommand: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n}\n\nexport default PopupSettings","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Panel, PanelHeader,} from '@vkontakte/vkui';\nimport {Map} from \"./MapPanels/MapsEmpty\";\nimport {Marker} from 'react-leaflet'\nimport {iconDefault} from \"./MapPanels/Markers\";\nimport PopupSettings from \"./MapPanels/PopupSettings\";\nimport * as client from \"../api/client\";\n\nconst v = (i) => {return ((i !== null) && (i !== undefined))}\n\n\nconst MarkersList = ({coords, onClick}) => {\n    if (!Array.isArray(coords)){\n        return null;\n    }\n    return coords.map((item) => {\n        return <Marker icon={iconDefault} key={item.id} position={[item.latitude, item.longitude]}\n                       eventHandlers={{\n                           click: onClick.bind(this, item.id)\n                       }}\n        />\n    });\n}\n\nconst MainMap = ({id, globalSetModalView}) => {\n    const [telemetry, setTelemetry] = useState([]);\n    const [mapsCoordsData, setMapsCoordsData] = useState([]);\n    const [popupSettingsView, setPopupSettingsView] = useState(null);\n    // Init data\n    useEffect(() => {\n        async function load() {\n            const data = await client.LastTelemetriesSensors();\n            setTelemetry(data);\n        }\n        load();\n        setInterval(() => load(), 10000);\n    }, [])\n\n    // Перерасчёт координат на карте для меток:\n    useEffect(() => {\n        const ans = [];\n        for (let row of telemetry){\n            if (v(row.influx) && v(row.influx.ICCID) && v(row.influx.longitude) && v(row.influx.latitude)){\n                ans.push({\n                    id: row.influx.ICCID,\n                    longitude: row.influx.longitude,\n                    latitude: row.influx.latitude\n                })\n            }\n        }\n        setMapsCoordsData(ans);\n\n    }, [telemetry])\n\n    const HandlerMarker = (uuid) => {\n        setPopupSettingsView(true);\n        const fieldIndexTelemetry = telemetry.findIndex((e) => {\n            if (v(e[\"influx\"]) && v(e[\"influx\"][\"ICCID\"])) {\n                return e[\"influx\"][\"ICCID\"] === uuid.toString();\n            }\n            return false;\n        });\n        if (fieldIndexTelemetry === -1){return false;}\n        const telemetry_data = telemetry[fieldIndexTelemetry];\n        const coords = {\n            latitude: telemetry_data.influx.latitude,\n            longitude: telemetry_data.influx.longitude,\n        }\n        const onChangeCommand = ({auto, level}) => {\n            console.log({uuid, auto, level});\n            client.PushCommandTelemetriesSensor(uuid, auto, level).then();\n        }\n        setPopupSettingsView(\n            <PopupSettings onClose={setPopupSettingsView.bind(this, null)} dataShape={{\n                positionMarker: coords,\n                temperature: telemetry_data.influx.Tamb_degC,\n                uuid: uuid.toString(),\n                autoLight: telemetry_data.command.auto === undefined,\n                light: telemetry_data.command === undefined ? telemetry_data.influx.level_light: telemetry_data.command.level_light\n            }} onChangeCommand={onChangeCommand}/>\n        );\n    }\n\n\n    return (\n        <Panel id={id}>\n            <PanelHeader>Вариационные данные</PanelHeader>\n            <div className={\"mocks_wrapper\"}>\n                <Map height={\"100%\"}>\n                    <MarkersList onClick={HandlerMarker} coords={mapsCoordsData}/>\n                    {popupSettingsView}\n                </Map>\n            </div>\n        </Panel>\n    );\n}\n\nMarkersList.propTypes = {\n    coords: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            latitude: PropTypes.number.isRequired,\n            longitude: PropTypes.number.isRequired,\n        })\n    ),\n    onClick: PropTypes.func.isRequired,\n}\n\nMainMap.propTypes = {\n    id: PropTypes.string.isRequired,\n    globalSetModalView: PropTypes.func,\n};\n\nexport default MainMap;\n","import React, { useState, useEffect } from 'react';\nimport { View, AppRoot } from '@vkontakte/vkui';\nimport {HashRouter, Route} from 'react-router-dom';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './style.css'\n\nimport MocksSettings from './panels/MocksSettings';\nimport LeftMenuItem from \"./panels/MenuItems\";\nimport MainMap from \"./panels/MainMap\";\nimport {PathSubUrl} from \"./api/client\";\n\nconst App = () => {\n\tconst [popout, setPopout] = useState(null);\n\tconst [modalView, setModalView] = useState(null);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst Wrapper = (id, component) => (\n\t\t<View activePanel={id}>{component}</View>\n\t);\n\n\tconst RouteMocksSettings = () => Wrapper('mocksSettings', <MocksSettings globalSetModalView={setModalView} id='mocksSettings'/>);\n\tconst RouteMainMap = () => Wrapper('mainMap', <MainMap globalSetModalView={setModalView} id='mainMap'/>);\n\n\n\treturn (\n\t\t<HashRouter basename='/'>\n\t\t\t<AppRoot>\n\t\t\t\t<LeftMenuItem/>\n\t\t\t\t{modalView}\n\t\t\t\t<div className={\"Content\"}>\n\t\t\t\t\t<Route path={\"/mocks-settings/\"} exact component={RouteMocksSettings} />\n\t\t\t\t\t<Route path={\"/\"} exact component={RouteMainMap} />\n\t\t\t\t</div>\n\t\t\t</AppRoot>\n\t\t</HashRouter>\n\t);\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}